# vim:ft=conf
# Kitty Configuration File
# For configuration options, see https://sw.kovidgoyal.net/kitty/conf.html
# REF:
# extremely useful settings/options:
# https://github.com/akinsho/dotfiles/blob/main/.config/kitty/kitty.conf
# https://paul-nameless.com/mastering-kitty.html
# https://github.com/p-kolacz/.dotfiles/tree/master/kitty/.config/kitty/colors
# https://github.com/kovidgoyal/kitty/issues/2238 (fzf + kitty icat)

# --( kittens ) --
# https://github.com/kovidgoyal/kitty/tree/master/kittens
# https://github.com/trygveaa/kitty-kitten-search
# https://github.com/muchzill4/kitty-session
# https://dev.to/dylanirlbeck/kitty-sessions-44j2 (blog)
# https://github.com/muchzill4/setup/blob/master/dotfiles/fish/.config/fish/functions/kt.fish
# https://github.com/ad-on-is/kittens
# https://github.com/guysherman/kittymux
# https://github.com/knubie/vim-kitty-navigator
# https://github.com/fretboardfreak/kitty-theme-changer
# https://github.com/kassio/dotfiles/tree/main/config/xdg/kitty/kitty_search

# This sets the theme that kitty will use
#include Catppuccin-Mocha.conf
# include /Users/davidlee/.dotfiles/config/kitty/themes/tokyonight_night.conf

# this environment variable will be read by vim to set the proper
# catppuccin color for the vim theme.
# env THEME_FLAVOUR=mocha

# set the term to xterm-256color with italic support
term xterm-256color-italic

# Fonts
font_family                 MonoLisa variable 
bold_font                   auto
italic_font                 auto
bold_italic_font            auto
font_size                   16.0
adjust_line_height          4
disable_ligatures           never

###########################################################
# Symbols Nerd Font complete symbol_map
# easily troubleshoot missing/incorrect characters with:
#   kitty --debug-font-fallback
###########################################################

# # "Nerd Fonts - Pomicons"
# symbol_map  U+E000-U+E00D Symbols Nerd Font
#
# # "Nerd Fonts - Powerline"
# symbol_map U+e0a0-U+e0a2,U+e0b0-U+e0b3 Symbols Nerd Font
#
# # "Nerd Fonts - Powerline Extra"
# symbol_map U+e0a3-U+e0a3,U+e0b4-U+e0c8,U+e0cc-U+e0d2,U+e0d4-U+e0d4 Symbols Nerd Font
#
# # "Nerd Fonts - Symbols original"
# symbol_map U+e5fa-U+e62b Symbols Nerd Font
#
# # "Nerd Fonts - Devicons"
# symbol_map U+e700-U+e7c5 Symbols Nerd Font
#
# # "Nerd Fonts - Font awesome"
# symbol_map U+f000-U+f2e0 Symbols Nerd Font
#
# # "Nerd Fonts - Font awesome extension"
# symbol_map U+e200-U+e2a9 Symbols Nerd Font
#
# # "Nerd Fonts - Octicons"
# symbol_map U+f400-U+f4a8,U+2665-U+2665,U+26A1-U+26A1,U+f27c-U+f27c Symbols Nerd Font
#
# # "Nerd Fonts - Font Linux"
# symbol_map U+F300-U+F313 Symbols Nerd Font
#
# #  Nerd Fonts - Font Power Symbols"
# symbol_map U+23fb-U+23fe,U+2b58-U+2b58 Symbols Nerd Font
#
# #  "Nerd Fonts - Material Design Icons"
# symbol_map U+f500-U+fd46 Symbols Nerd Font
#
# # "Nerd Fonts - Weather Icons"
# symbol_map U+e300-U+e3eb Symbols Nerd Font
#
# # Misc Code Point Fixes
# symbol_map U+21B5,U+25B8,U+2605,U+2630,U+2632,U+2714,U+E0A3,U+E615,U+E62B Symbols Nerd Font

# Window
remember_window_size                    no # Always open at the configured witdth and height
initial_window_width                    1024
initial_window_height                   768
window_padding_width                    3.0
draw_minimal_borders                    yes
window_margin_width                     10
window_padding_width                    5
# set window opacity. Adjust this for readability, if needed.
background_opacity 0.90
#hide_window_decorations yes
# tab_bar_margin_height 10

# os-specific
draw_minimal_borders                    yes
# alts: titlebar-only, yes
# hide_window_decorations                 yes
# Change the color of the kitty window's titlebar on macOS. A value of "system"
# means to use the default system color, a value of "background" means to use
# the background color of the currently active window and finally you can use
# an arbitrary color, such as #12af59 or "red". WARNING: This option works by
# using a hack, as there is no proper Cocoa API for it. It sets the background
# color of the entire window and makes the titlebar transparent. As such it is
# incompatible with background_opacity. If you want to use both, you are
# probably better off just hiding the titlebar with macos_hide_titlebar.
# Match one dark vim title bar background color
macos_titlebar_color                    background
macos_hide_from_tasks                   no
macos_traditional_fullscreen            yes
macos_quit_when_last_window_closed      yes
macos_thicken_font                      0.25
macos_custom_beam_cursor                yes
# Use the option key as an alt key. With this set to no, kitty will use
# the macOS native Option+Key = unicode character behavior. This will
# break any Alt+key keyboard shortcuts in your terminal programs, but you
# can use the macOS unicode input technique.
macos_option_as_alt                     yes
macos_show_window_title_in              window
macos_colorspace                        displayp3

# https://github.com/kovidgoyal/kitty/pull/5969
# text_gamma_adjustment 1.7
# text_contrast 30

# tabs
# fade, slant, separator, powerline (slanted, angled, round), custom
tab_bar_style                       custom
tab_separator                       ""
# REF: https://github.com/kovidgoyal/kitty/discussions/4447
tab_fade                            0 0 0 0
tab_title_template                  "{fmt.fg._415c6d}{fmt.bg.default} â—‹ {index}:{f'{title[:6]}â€¦{title[-6:]}' if title.rindex(title[-1]) + 1 > 25 else title}{' [ï¡ˆ]' if layout_name == 'stack' else ''} "
active_tab_title_template           "{fmt.fg._83b6af}{fmt.bg.default} â—‰ {index}:{f'{title[:6]}â€¦{title[-6:]}' if title.rindex(title[-1]) + 1 > 25 else title}{' [ï¡ˆ]' if layout_name == 'stack' else ''} "
tab_activity_symbol                 none
tab_bar_edge                        top
tab_bar_margin_height               0.0 0.0
active_tab_font_style               bold
inactive_tab_font_style             normal
tab_bar_min_tabs                    2
bell_on_tab                         no
# or "ðŸ”” "

# bells
enable_audio_bell                   no
window_alert_on_bell                no
visual_bell_duration                0.0
visual_bell_color                   none

# HACK: passing environment variables to GUI applications in macOS is very hard
# so this works around that by specifying the path to homebrew installations here
# this only provides the $PATH not all the missing environment variables.
# NOTE: this is wy nvim must be started inside this file using zsh -c 'nvim'
env PATH=/opt/homebrew/bin/:/usr/local/bin/:${PATH}

# Advanced
# The shell program to execute. The default value of . means
# to use whatever shell is set as the default shell for the current user.
# Note that on macOS if you change this, you might need to add --login to
# ensure that the shell starts in interactive mode and reads its startup rc files.
shell                               zsh --login
shell_integration                   enabled
allow_remote_control                yes
# listen_on                       tcp:localhost:45876
listen_on                           unix:/tmp/mykitty
editor                              nvim
term                                xterm-kitty
single-instance                     yes

# Sessions
# https://sw.kovidgoyal.net/kitty/overview/#startup-sessions
# REF:
# - https://dev.to/dylanirlbeck/kitty-sessions-44j2
# - https://github.com/kovidgoyal/kitty/discussions/4066#discussioncomment-1390789 (troubleshooting with logging)
# - https://github.com/dflock/kitty-save-session
# - https://github.com/akinsho/phoenix-kitty
# TODO: session switching via https://github.com/muchzill4/kitty-session
# NOTE: nvim may need to be be started inside this file using zsh -c 'nvim'
startup_session                     ~/.config/kitty/sessions/mega.conf

# Mouse
copy_on_select                      yes
# -1 effectively means infinite scrollback
scrollback_lines                    20000
# hide the mouse cursor after a period of time (in seconds)
mouse_hide_wait                     10.0
# copy text when selecting with the mouse
copy_on_select                      yes

# cursor settings
# cursor_shape                    block
cursor                              none
shell_integration                   no-cursor
cursor_trail                        3
cursor_stop_blinking_after          10.0
pointer_shape_when_dragging         hand

# Misc
# or 0, 1, 2 (number of tabs)
# REF: https://sw.kovidgoyal.net/kitty/conf/?highlight=margin#opt-kitty.confirm_os_window_close
confirm_os_window_close               2
dynamic_background_opacity            yes
# url_style can be one of: none, single, double, curly
url_style                             curly
#: The color and style for highlighting URLs on mouse-over. url_style
#: can be one of: none, single, double, curly
open_url_modifiers                    super
#: The modifier keys to press when clicking with the mouse on URLs to
#: open the URL
open_url_with                         default
#: The program with which to open URLs that are clicked on. The
#: special value default means to use the operating system's default
#: URL handler.
url_prefixes                          http https file ftp
#: The set of URL prefixes to look for when detecting a URL under the
#: mouse cursor.
copy_on_select                        yes
#: Copy to clipboard or a private buffer on select. With this set to
#: clipboard, simply selecting text with the mouse will cause the text
#: to be copied to clipboard. Useful on platforms such as macOS that
#: do not have the concept of primary selections. You can instead
#: specify a name such as a1 to copy to a private kitty buffer
#: instead. Map a shortcut with the paste_from_buffer action to paste
#: from this private buffer. For example::
#:     map cmd+shift+v paste_from_buffer a1
#: Note that copying to the clipboard is a security risk, as all
#: programs, including websites open in your browser can read the
#: contents of the system clipboard.
strip_trailing_spaces                   never
#: Remove spaces at the end of lines when copying to clipboard. A
#: value of smart will do it when using normal selections, but not
#: rectangle selections. always will always do it.
rectangle_select_modifiers              ctrl+alt
#: The modifiers to use rectangular selection (i.e. to select text in
#: a rectangular block with the mouse)
terminal_select_modifiers               shift
#: The modifiers to override mouse selection even when a terminal
#: application has grabbed the mouse
select_by_word_characters               @-./_~?&=%+#
sync_to_monitor yes
# How much to dim text that has the DIM/FAINT attribute set. 1.0 means no dimming and
# 0.0 means fully dimmed (i.e. invisible).
allow_hyperlinks                        yes
close_on_child_death                    yes
# clipboard_control write-clipboard write-primary read-clipboard
clipboard_control write-clipboard write-primary read-clipboard-ask read-primary-ask

# If you have specific kitty overrides you'd like to make, you can add them
# to the kitty-overrides.conf file. This file is gitignored, so you won't
# have to worry about accidentally committing your overrides.
include kitty-overrides.conf

# BEGIN_KITTY_THEME
# Eldritch dark
include current-theme.conf
# END_KITTY_THEME

# globinclude maps.conf
